name: Deploy documentations to GitHub Pages

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || (github.event_name == 'push' && github.event.head_commit && startsWith(github.event.head_commit.message, 'doc:'))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Initialize Building Environment
        uses: ./.github/actions/init-build
        with:
          os: ubuntu-latest

      - name: Install Doxygen
        uses: ssciwr/doxygen-install@v1.2.0

      - name: Build TALCS
        shell: pwsh
        run: |
          cmake -B build -G Ninja `
            -DCMAKE_BUILD_TYPE=Debug `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT_DIR }}/scripts/buildsystems/vcpkg.cmake" `
            -Dqmsetup_DIR=${{ env.QMSETUP_INSTALLED_DIR }}/lib/cmake/qmsetup `
            -DTALCS_BUILD_DOCUMENTATIONS:BOOL=ON
          cmake --build build --target talcs_RunDoxygen
          $binaryDir = (Get-ChildItem -Path build -Filter out-* -Directory)[0]
          Write-Output BUILD_BINARY_DIR=$(Resolve-Path -Path $binaryDir) >> $env:GITHUB_ENV

      - name: Output CNAME
        shell: pwsh
        run: |
          Write-Output "talcs.sjimo.dev" >> ${{ env.BUILD_BINARY_DIR }}/share/doc/talcs/html/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ${{ env.BUILD_BINARY_DIR }}/share/doc/talcs/html

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
